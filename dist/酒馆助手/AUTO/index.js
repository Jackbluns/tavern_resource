const modes=["ModeA","ModeB","ModeO","ModeT"],take_overs=["允许AI抢话","禁止AI抢话"];async function get_variables(){return _.pick(getVariables({type:"chat"}),["mode","step"])}async function set_variables(variables){await insertOrAssignVariables(variables)}async function get_status(){const variables=await get_variables(),display=$("<div>");display.append($("<p>").text(`当前模式: ${variables.mode??"未选择"}`)),display.append($("<p>").text(`当前步骤: ${variables.step??"请先选择模式"}`)),triggerSlash(`/popup okButton="确认" ${display.html()}`)}var detail;async function choose_mode(){const chosen_mode=await triggerSlash(`/buttons labels=${JSON.stringify(modes)}`),take_over=await triggerSlash(`/buttons labels=${JSON.stringify(take_overs)}`);chosen_mode&&take_over&&detail.choose_mode(chosen_mode,take_over)}async function decrease_step(){await detail.set_step_by_offset(-1)}async function increase_step(){await detail.set_step_by_offset(1)}!function(detail){detail.choose_mode=async function choose_mode(chosen_mode,take_over){const char_lorebook=await getCurrentCharPrimaryLorebook();if(!char_lorebook)return void triggerSlash("/echo severity=error 未找到 A.U.T.O 世界书, 你是否忘了导入它?");let chat_lorebook=await getOrCreateChatLorebook();if((await getLorebookEntries(chat_lorebook)).length>0){if("0"===await triggerSlash('/popup cancelButton="取消" okButton="确认" result=true 检测到本聊天文件绑定的世界书非空, 你确定要清空它重新选择模式吗?'))return}await deleteLorebook(chat_lorebook),chat_lorebook=await getOrCreateChatLorebook();const entries=_.reject(await getLorebookEntries(char_lorebook),(entry=>_.reject(modes,(mode=>mode===chosen_mode)).some((mode=>entry.comment.includes(mode)))));for(const entry of entries)await createLorebookEntry(chat_lorebook,{...entry,enabled:!!(entry.comment.match(/\D1\D/)||entry.comment.includes("基础概念")||entry.comment.includes(`写卡模式-${take_over}`))});set_variables({mode:chosen_mode,step:1}),triggerSlash(`/echo severity=success 成功将 '${chosen_mode}' 提取到聊天世界书 '${chat_lorebook}' 中!`)},detail.set_step_by_offset=async function set_step_by_offset(offset){const variables=await get_variables();if(null==variables.mode||null==variables.step)return void triggerSlash("/echo severity=error 你必须先选择模式!");if("ModeT"===variables.mode)return void triggerSlash("/echo severity=error ModeT不支持切换步骤, 请手动开关!");const lorebook=await getOrCreateChatLorebook(),entries=await getLorebookEntries(lorebook),{min,max}=await async function get_step_range(entries){return{min:1,max:_.max([...entries.reduce(((result,entry)=>result+entry.comment),"").matchAll(/\d+/g)].map((match=>Number(match.toString()))))}}(entries),new_step=variables.step+offset;if(new_step<min||new_step>max)return void triggerSlash(`/echo severity=error 设置的步骤 '${new_step}' 超出了范围 '${min}-${max}'!`);const get_index=entry=>Number(entry.comment.match(/(?<=\D)\d+(?=\D)/)[0]);entries.filter((entry=>entry.comment.includes("Step"))).forEach((entry=>entry.enabled=get_index(entry)===new_step)),entries.filter((entry=>entry.comment.includes("Part"))).forEach((entry=>entry.enabled=get_index(entry)<=new_step)),setLorebookEntries(lorebook,entries),set_variables({step:new_step}),triggerSlash(`/echo severity=success 成功将 '${variables.mode}' 设置为步骤 '${new_step}'`)}}(detail||(detail={})),$((()=>{eventOnButton("查看状态",get_status),eventOnButton("选择模式",choose_mode),eventOnButton("上一步",decrease_step),eventOnButton("下一步",increase_step)}));