async function importQuickReply(file_content,option={}){const required_option_scope=option.scope??"disable",url=(option.button,function tryParseUrl(file_content){try{return new URL(file_content)}catch(error){return}}(file_content));url&&(file_content=await fetch(url).then((request=>request.text())));const quick_reply_set=function tryParseJson(file_content){try{return JSON.parse(file_content)}catch(error){return}}(file_content);if(!quick_reply_set)return void console.warn("[自动导入快速回复] 未能成功导入快速回复, 请确认所给的内容是一个正确的快速回复文件内容, 或是快速回复文件的链接网址");const quick_replies=quick_reply_set.qrList;triggerSlash(`\n    /parser-flag STRICT_ESCAPING on ||\n    /qr-set-off "${quick_reply_set.name}" ||\n    /qr-chat-set-off "${quick_reply_set.name}" ||\n    /qr-set-delete ${quick_reply_set.name} ||\n    /qr-set-create nosend=${quick_reply_set.disableSend} before=${quick_reply_set.placeBeforeInput} inject=${quick_reply_set.injectInput} ${quick_reply_set.name} ||\n    ${quick_replies.map((qr=>`/qr-create set=${quick_reply_set.name} label=${qr.label} ${qr.icon?`icon=${qr.icon}`:""} showlabel=${qr.showLabel} hidden=${qr.isHidden} startup=${qr.executeOnStartup} user=${qr.executeOnUser} bot=${qr.executeOnAi} load=${qr.executeOnChatChange} new=${qr.executeOnNewChat} group=${qr.executeOnGroupMemberDraft} title=${qr.title} "${qr.message.replaceAll('"','\\"').replaceAll("<user>","{{user}}").replaceAll("<char>","{{char}}").replaceAll("{{","\\{\\{")}" ||\n`)).join("")}\n    ${quick_replies.filter((qr=>0!==qr.contextList.length)).map((qr=>qr.contextList.map((context=>`/qr-contextadd set=${quick_reply_set.name} label=${qr.label} id=${qr.id} chain=${context.isChained} "${context.set}" ||\n`)).join("")))}\n    ${{disable:"",character:`/qr-chat-set-on visible=${option.button} "${quick_reply_set.name}" ||\n`,global:`/qr-set-on visible=${option.button} "${quick_reply_set.name}" ||\n`}[required_option_scope]}\n    /parser-flag STRICT_ESCAPING off ||\n`)}$((()=>async function importQuickReplyFromRegex(){$("#qr--isEnabled").prop("checked",!0)[0].dispatchEvent(new Event("click")),(await getTavernRegexes()).filter((regex=>regex.enabled)).forEach((regex=>{const match=regex.script_name.match(/^快速回复-(不启用|聊天|全局)-(显示按钮|不显示按钮)-.*$/);if(!match)return;const option={scope:{不启用:"disable",聊天:"character",全局:"global"}[match[1]],button:{显示按钮:!0,不显示按钮:!1}[match[2]]};console.info(`[自动导入快速回复] 从 ${regex.script_name} 中导入快速回复, 选项: ${JSON.stringify(option)}`),importQuickReply(regex.replace_string,option)}))}()));