const unlock_token_length_debounced=_.debounce((function unlock_token_length(){const settings=SillyTavern.chatCompletionSettings;!0===settings.max_context_unlocked&&2e6===settings.openai_max_context||($("#oai_max_context_unlocked").prop("checked",!0).trigger("input"),$("#openai_max_context_counter").val(2e6),$("#openai_max_context").val(2e6).trigger("input"))}),1e3);$((()=>{eventOn(tavern_events.SETTINGS_UPDATED,unlock_token_length_debounced)}));const variable_regex=/@\s*([^@\n]*?)\s*@?\s*=\s*(?:.*?⇒)?'?([^@\n]*?)'?\s*((@$)|(?=@))/gm;function stringifyVariables(data){return`${Object.entries(data).map((([key,value])=>`@${key}=${value}@`)).join("\n")}`}async function updateLastVariables(data){await async function updateVariablesAt(message_id,data){const messages=await getChatMessages(message_id);if(messages.length<=0)return;const message=messages[0].message;await setChatMessage({message:message+`\n<UpdateVariable>\n${stringifyVariables(data)}\n</UpdateVariable>`},message_id,{refresh:"none"})}(SillyTavern.chat.length-1,data)}async function propagateVariables(){const last_chat=SillyTavern.chat.at(-1);if(!last_chat)return;const process=data=>_.pickBy(_.mapKeys(data,((_value,key)=>key.replaceAll("@","").trim())),((_value,key)=>key.startsWith("变量."))),data=_.merge({},process(SillyTavern.chatMetadata?.variables),...SillyTavern.chat.slice(-2).map((chat=>process(function parseVariables(text){return _.merge({},...[...text.matchAll(variable_regex)].map((match=>({[match[1]]:match[2]}))))}(chat.mes))))),updated_message=last_chat.mes.replace(/(?:\n<UpdateVariable>\n<FullUpdateVariable>.*?<\/FullUpdateVariable>\n<\/UpdateVariable>)|$/s,`\n<UpdateVariable>\n<FullUpdateVariable>\n${stringifyVariables(data)}\n</FullUpdateVariable>\n</UpdateVariable>`);last_chat.swipes&&last_chat.swipe_id&&(last_chat.swipes[last_chat.swipe_id]=updated_message),last_chat.mes=updated_message,await SillyTavern.saveChat()}$((()=>{eventOn("在最新楼层更新变量",updateLastVariables),eventOn(tavern_events.MESSAGE_SENT,propagateVariables),eventOn(tavern_events.MESSAGE_RECEIVED,propagateVariables)})),$((()=>{!async function sync_lorebook_settings(){const EXPECTED_SETTINGS={scan_depth:2,context_percentage:100,budget_cap:0,min_activations:0,max_depth:0,max_recursion_steps:0,insertion_strategy:"character_first",include_names:!1,recursive:!0,case_sensitive:!1,match_whole_words:!1,use_group_scoring:!1,overflow_alert:!1},settings=await getLorebookSettings();_.isEqual(_.merge({},settings,EXPECTED_SETTINGS),settings)||setLorebookSettings(EXPECTED_SETTINGS)}()}));